name: Security & SSL Monitoring

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggers

jobs:
  ssl-check:
    runs-on: ubuntu-latest

    steps:
      - name: Check SSL certificate expiration
        run: |
          echo "üîí Checking SSL certificate for oatcode.com..."

          # Get certificate expiration
          EXPIRY=$(echo | openssl s_client -servername oatcode.com -connect oatcode.com:443 2>/dev/null | openssl x509 -noout -enddate | cut -d= -f2)

          echo "Certificate expires: $EXPIRY"

          # Calculate days until expiration
          EXPIRY_EPOCH=$(date -d "$EXPIRY" +%s)
          NOW_EPOCH=$(date +%s)
          DAYS_REMAINING=$(( ($EXPIRY_EPOCH - $NOW_EPOCH) / 86400 ))

          echo "Days remaining: $DAYS_REMAINING"

          if [ $DAYS_REMAINING -lt 30 ]; then
            echo "‚ö†Ô∏è WARNING: SSL certificate expires in $DAYS_REMAINING days!"
            echo "The autonomous engine should renew it automatically."
            exit 1
          else
            echo "‚úÖ SSL certificate valid for $DAYS_REMAINING days"
          fi

      - name: Check HTTPS accessibility
        run: |
          echo "üåê Checking HTTPS accessibility..."

          STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://oatcode.com)

          if [ $STATUS -eq 200 ]; then
            echo "‚úÖ Website is accessible via HTTPS"
          else
            echo "‚ùå Website returned status code: $STATUS"
            exit 1
          fi

      - name: Check security headers
        run: |
          echo "üîç Checking security headers..."

          curl -I https://oatcode.com 2>&1 | grep -i "strict-transport-security" && echo "‚úÖ HSTS enabled" || echo "‚ö†Ô∏è HSTS not found"
          curl -I https://oatcode.com 2>&1 | grep -i "x-frame-options" && echo "‚úÖ X-Frame-Options set" || echo "‚ö†Ô∏è X-Frame-Options not found"
          curl -I https://oatcode.com 2>&1 | grep -i "x-content-type-options" && echo "‚úÖ X-Content-Type-Options set" || echo "‚ö†Ô∏è X-Content-Type-Options not found"

  dependency-security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Run security audit
        run: |
          echo "üîç Running npm security audit..."
          npm audit --production --audit-level=moderate || true

      - name: Check for critical vulnerabilities
        run: |
          echo "üîç Checking for CRITICAL vulnerabilities..."
          CRITICAL=$(npm audit --json | grep -c '"severity":"critical"' || true)

          if [ "$CRITICAL" -gt 0 ]; then
            echo "‚ùå Found $CRITICAL critical vulnerabilities!"
            echo "Run 'npm audit fix' to resolve"
            exit 1
          else
            echo "‚úÖ No critical vulnerabilities found"
          fi

  website-health:
    runs-on: ubuntu-latest

    steps:
      - name: Check website uptime
        run: |
          echo "üè• Checking website health..."

          STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://oatcode.com/health)

          if [ $STATUS -eq 200 ]; then
            echo "‚úÖ Health endpoint responding"
          else
            echo "‚ö†Ô∏è Health endpoint returned: $STATUS"
          fi

      - name: Check page load time
        run: |
          echo "‚è±Ô∏è Measuring page load time..."

          TIME=$(curl -o /dev/null -s -w '%{time_total}\n' https://oatcode.com)

          echo "Page load time: ${TIME}s"

          # Alert if > 3 seconds
          if (( $(echo "$TIME > 3.0" | bc -l) )); then
            echo "‚ö†Ô∏è WARNING: Page load time is slow (${TIME}s)"
          else
            echo "‚úÖ Page load time is acceptable"
          fi
